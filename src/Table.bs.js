// Generated by BUCKLESCRIPT VERSION 5.0.4, PLEASE EDIT WITH CARE
'use strict';

var Css = require("bs-css/src/Css.js");
var List = require("bs-platform/lib/js/list.js");
var $$Array = require("bs-platform/lib/js/array.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Caml_int32 = require("bs-platform/lib/js/caml_int32.js");
var TableRow$ReactHooksTemplate = require("./TableRow.bs.js");

var container = Css.style(/* :: */[
      Css.height(Css.px(800)),
      /* :: */[
        Css.width(Css.px(500)),
        /* :: */[
          Css.display(Css.flexBox),
          /* :: */[
            Css.flexDirection(Css.column),
            /* :: */[
              Css.overflowY(Css.auto),
              /* :: */[
                Css.fontFamily("'Mali', cursive"),
                /* :: */[
                  Css.position(Css.relative),
                  /* [] */0
                ]
              ]
            ]
          ]
        ]
      ]
    ]);

function scroll(h) {
  return Css.style(/* :: */[
              Css.minHeight(Css.px(h)),
              /* [] */0
            ]);
}

var scrollWrapper = Css.style(/* :: */[
      Css.overflowY(Css.auto),
      /* :: */[
        Css.height(Css.px(800)),
        /* :: */[
          Css.width(Css.px(500)),
          /* :: */[
            Css.position(Css.relative),
            /* [] */0
          ]
        ]
      ]
    ]);

var tableContent = Css.style(/* :: */[
      Css.minWidth(Css.pct(100)),
      /* :: */[
        Css.position(Css.absolute),
        /* :: */[
          Css.top(Css.px(0)),
          /* :: */[
            Css.right(Css.px(0)),
            /* :: */[
              Css.overflow(Css.hidden),
              /* [] */0
            ]
          ]
        ]
      ]
    ]);

var Styles = /* module */[
  /* container */container,
  /* scroll */scroll,
  /* scrollWrapper */scrollWrapper,
  /* tableContent */tableContent
];

function makeList(num) {
  var _p = /* tuple */[
    num - 1 | 0,
    num
  ];
  var _acc = /* [] */0;
  while(true) {
    var acc = _acc;
    var p = _p;
    var n = p[1];
    if (n < 1) {
      return acc;
    } else {
      var i = p[0];
      _acc = List.append(/* :: */[
            /* tuple */[
              i,
              n
            ],
            /* [] */0
          ], acc);
      _p = /* tuple */[
        i - 1 | 0,
        n - 1 | 0
      ];
      continue ;
    }
  };
}

var list = makeList(500000);

var listLen = List.length(list);

function slice(startFrom, length, list) {
  return List.partition((function (p) {
                  var i = p[0];
                  if (i >= startFrom) {
                    return i < (startFrom + length | 0);
                  } else {
                    return false;
                  }
                }), list)[0];
}

function createRows(lst) {
  return List.rev_map((function (p) {
                var v = p[1];
                return React.createElement(TableRow$ReactHooksTemplate.make, {
                            children: String(v),
                            height: 50,
                            key: String(v)
                          });
              }), lst);
}

function Table(Props) {
  var numberOfRows = 16;
  var match = React.useState((function () {
          return 0;
        }));
  var setStart = match[1];
  var start = match[0];
  var onScroll = function ($$event) {
    var scrollTop = $$event.target.scrollTop;
    var nextStart = scrollTop / 50 | 0;
    if (start !== nextStart) {
      return Curry._1(setStart, (function (param) {
                    return nextStart;
                  }));
    } else {
      return 0;
    }
  };
  var nList = slice(listLen - (numberOfRows + start | 0) | 0, numberOfRows, list);
  return React.createElement("div", {
              className: container
            }, React.createElement("div", {
                  className: tableContent
                }, $$Array.of_list(createRows(nList))), React.createElement("div", {
                  className: scrollWrapper,
                  onScroll: onScroll
                }, React.createElement("div", {
                      className: scroll(Caml_int32.imul(listLen, 50))
                    })));
}

var rowHeight = 50;

var tableHeight = 800;

var tableWidth = 500;

var make = Table;

exports.rowHeight = rowHeight;
exports.tableHeight = tableHeight;
exports.tableWidth = tableWidth;
exports.Styles = Styles;
exports.makeList = makeList;
exports.list = list;
exports.listLen = listLen;
exports.slice = slice;
exports.createRows = createRows;
exports.make = make;
/* container Not a pure module */
